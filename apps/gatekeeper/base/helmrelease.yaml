apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ska-src-service-gatekeeper
  namespace: ska-src-gatekeeper
spec:
  chart:
    spec:
      chart: etc/helm
      sourceRef:
        kind: GitRepository
        name:  ska-src-service-gatekeeper
        namespace: ska-src-gatekeeper
  interval: 1m
  values:
    deployment_echo:
      namespace: ska-src-gatekeeper-echo
      image: harbor.srcdev.skao.int/ska-src-dm-da-service-gatekeeper/service-gatekeeper-echo:1.0.1

    ingress:
      proxyBodySize: 5000m
      proxyBuffering: "off"
      proxyRequestBuffering: "off"

    gatekeeper:
      namespace: ska-src-gatekeeper
      ingress_proxyBodySize: 5000m
      ingress_proxyBuffering: "off"
      ingress_proxyRequestBuffering: "off"
      iam_token_endpoint: https://ska-iam.stfc.ac.uk/token
      permissions_api_plugin_authz_endpoint: https://permissions.srcdev.skao.int/api/v1/authorise/plugin/
      site_capabilities_api_get_service_by_id_endpoint: https://site-capabilities.srcdev.skao.int/api/v1/services/
      site_capabilities_gatekeeper_client_scopes: site-capabilities-api-service
      site_capabilities_gatekeeper_client_audience: site-capabilities-api
      services_cache_ttl: 3600
      existingSecret: true
      services:
        - route: "/echo"                          # request route
          namespace: ska-src-gatekeeper           # namespace the service will run in, can be different to gatekeeper ns
          prefix: "http://"                       # usually http:// assuming SSL termination occurs upstream
          service_name: "ska-src-gatekeeper-echo" # to proxied address
          ingress_host: ""                        # Host domain the Ingress rules will apply to
          port: 8080
          uuid: ""                                # generated by the site capabilities catalogue, corresponding entry must exist in iam

    ingress-nginx:
      controller:
        replicaCount: 1
        service:
          type: LoadBalancer
          loadBalancerIP: ""
        metrics:
          enabled: true
        ingressClass: gatekeeper-nginx
        ingressClassResource:
          name: gatekeeper-nginx
          enabled: true
          default: false
          controllerValue: "skao.int/gatekeeper-nginx"
        allowSnippetAnnotations: true
        extraArgs:
          enable-ssl-passthrough: ""
        extraVolumeMounts:
          - name: response-lua
            mountPath: /etc/nginx/lua/conf/response.lua
            subPath: response.lua
            readOnly: true
          - name: backend-lua
            mountPath: /etc/nginx/lua/conf/backend.lua
            subPath: backend.lua
            readOnly: true
          - name: mappings-lua
            mountPath: /etc/nginx/lua/conf/mappings.lua
            subPath: mappings.lua
            readOnly: true
          - name: permissions-lua
            mountPath: /etc/nginx/lua/conf/permissions.lua
            subPath: permissions.lua
            readOnly: true
          - name: site-capabilities-lua
            mountPath: /etc/nginx/lua/conf/site_capabilities.lua
            subPath: site-capabilities.lua
            readOnly: true
          - name: client-credentials
            mountPath: /etc/credentials
            readOnly: true
        extraVolumes:
          - name: response-lua
            configMap:
              name: response-lua-config
          - name: backend-lua
            configMap:
              name: backend-lua-config
          - name: mappings-lua
            configMap:
              name: mappings-lua-config
          - name: permissions-lua
            configMap:
              name: permissions-lua-config
          - name: site-capabilities-lua
            configMap:
              name: site-capabilities-lua-config
          - name: client-credentials
            secret:
              secretName: ska-src-gatekeeper-secret
