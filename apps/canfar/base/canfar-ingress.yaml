# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: canfar-ingress
#   namespace: skaha-system
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     cert-manager.io/cluster-issuer: letsencrypt-prod
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: "place-holder-host"  
#     http:
#       paths:
#       - path: /science-portal
#         pathType: Prefix
#         backend:
#           service:
#             name: science-portal-tomcat-svc
#             port:
#               number: 8080
#   tls:
#   - hosts:
#     - "canfar.ral.uksrc.org"
#     secretName: canfar-tls-secret


#using this
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: canfar-ingress
#   namespace: skaha-system
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     cert-manager.io/cluster-issuer: letsencrypt-prod
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: "place-holder-host"  
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: science-portal-tomcat-svc
#             port:
#               number: 8080
#   tls:
#   - hosts:
#     - "canfar.ral.uksrc.org"
#     secretName: canfar-tls-secret


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: canfar-ingress
  namespace: skaha-system
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: letsencrypt-traefik-prod
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: base-traefik
  rules:
  - host: "place-holder-host"  
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: science-portal-tomcat-svc
            port:
              number: 8080
  tls:
  - hosts:
    - "canfar.ral.uksrc.org"
    secretName: canfar-tls-secret