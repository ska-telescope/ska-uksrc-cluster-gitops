apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: scienceportal
  namespace: skaha-system
spec:
  interval: 5m
  chart:
    spec:
      chart: scienceportal
      version: 0.3.1
      sourceRef:
        kind: HelmRepository
        name: science-platform
        namespace: skaha-system
  valuesFrom:
    - kind: Secret
      name: oidc-credentials
      valuesKey: clientID
      targetPath: deployment.sciencePortal.oidc.clientID
    - kind: Secret
      name: oidc-credentials
      valuesKey: clientSecret
      targetPath: deployment.sciencePortal.oidc.clientSecret        
  values:
    replicaCount: 1
    skaha:
      namespace: skaha-system
    deployment:
      hostname: canfar.ral.uksrc.org
      sciencePortal:
        themeName: src
        tabLabels:
          - Standard
          - Advanced
        resources:
          requests:
            memory: "500M"
            cpu: "500m"
          limits:
            memory: "500M"
            cpu: "500m"
        oidc:
          uri: https://ska-iam.stfc.ac.uk/
          redirectURI: https://canfar.ral.uksrc.org/science-portal/oidc-callback
          callbackURI: https://canfar.ral.uksrc.org/science-portal/
          scope: "openid profile offline_access"

        skahaResourceID: ivo://canfar.ral.uksrc.org/skaha
        gmsID: ivo://skao.int/gms
        registryURL: https://spsrc27.iaa.csic.es/reg
        identityManagerClass: org.opencadc.auth.StandardIdentityManager

        extraVolumeMounts:
        - mountPath: "/config/cacerts"
          name: cacert-volume

        extraVolumes:
        - name: cacert-volume
          secret:
            defaultMode: 420
            secretName: canfar-tls-secret



        # The logo in the top left.  No link associated, just the image.  This can be relative, or absolute.
        # Default is the SRCNet Logo.
        #logoURL: /science-portal/images/SRCNetLogo.png

    # secrets:
      # Uncomment to enable local or self-signed CA certificates for your domain to be trusted.
      # science-portal-cacert-secret:
        # ca.crt: <base64 encoded ca.crt blob>
